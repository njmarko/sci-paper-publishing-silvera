/**
    THIS IS GENERATED CODE AND SHOULD NOT BE CHANGED MANUALLY!!!

    Generated by: silvera
    Date: 2022-05-21 14:35:59
*/

package com.silvera.SciPaperService.controller;

import java.util.Collection;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import com.silvera.SciPaperService.service.base.*;
import com.silvera.SciPaperService.domain.model.*;
import com.silvera.SciPaperService.messages.*;
import org.springframework.web.bind.annotation.*;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.core.KafkaTemplate;
import javax.validation.Valid;


@RefreshScope
@RestController
public class SciPaperServiceController {

    @Autowired
    ISciPaperServiceService sciPaperServiceService;

    // Auto-generated CRUD methods
    
    
    
    @RequestMapping(value="/scipaper", method=RequestMethod.POST)
    @ResponseBody
    public SciPaper createSciPaper(@Valid @RequestBody SciPaper scipaper){
        return sciPaperServiceService.createSciPaper(scipaper);
    }
    
    
    @RequestMapping(value="/scipaper/{id}", method=RequestMethod.PUT)
    @ResponseBody
    public SciPaper updateSciPaper(@PathVariable java.lang.String id, @Valid @RequestBody SciPaper scipaper){
        return sciPaperServiceService.updateSciPaper(id, scipaper);
    }
    
    
    @RequestMapping(value="/scipaper/{id}", method=RequestMethod.GET)
    @ResponseBody
    public SciPaper readSciPaper(@PathVariable java.lang.String id){
        return sciPaperServiceService.readSciPaper(id);
    }
    
    
    @RequestMapping(value="/scipaper/{id}", method=RequestMethod.DELETE)
    @ResponseBody
    public void deleteSciPaper(@PathVariable java.lang.String id){
        sciPaperServiceService.deleteSciPaper(id);
    }
    
    

    //
    // Public functions
    //
    
    

    @PostMapping(value = "createpaper")


    public SciPaper createPaper(@RequestBody SciPaper sciPaper){
        
        return sciPaperServiceService.createPaper(sciPaper);

    }
    
    

    @PostMapping(value = "publish")
    public java.lang.Boolean publish(@RequestBody(required = false) java.lang.String id, @RequestBody(required = false) java.lang.String username){
        
        return sciPaperServiceService.publish(id, username);

    }
    

    //
    // Message consumers
    //
    
}