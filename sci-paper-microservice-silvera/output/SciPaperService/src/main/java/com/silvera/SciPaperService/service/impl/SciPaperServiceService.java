/**
    Use this file to implement business logic. This file will be preserved
    during next compilations.

    Generated by: silvera
    Date: 2022-05-21 16:42:57
*/

package com.silvera.SciPaperService.service.impl;

import java.util.Optional;
import org.springframework.stereotype.Service;
import com.silvera.SciPaperService.domain.model.*;
import com.silvera.SciPaperService.service.base.*;
import com.silvera.SciPaperService.repository.*;
import com.silvera.SciPaperService.messages.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.core.KafkaTemplate;

import com.silvera.SciPaperService.service.dependencies.*;


@Service
public class SciPaperServiceService implements ISciPaperServiceService {

    
    
    @Autowired
    SciPaperRepository scipaperRepository;
    

    
    @Autowired
    UserServiceClient userServiceClient;
    

    @Autowired
    KafkaTemplate<String, com.silvera.SciPaperService.messages.papermsggroup.PublishPaper> papermsggroupPublishPaperKafkaTemplate;
    

    // Auto-generated CRUD methods
    
    @Override
    public SciPaper createSciPaper(SciPaper scipaper){
        scipaperRepository.save(scipaper);

        Optional<SciPaper> opt = scipaperRepository.findById(scipaper.getId());
        return opt.orElse(null);
    }
    
    
    @Override
    public SciPaper updateSciPaper(java.lang.String id, SciPaper scipaperUpdate){
        Optional<SciPaper> opt = scipaperRepository.findById(id);
        SciPaper entity = opt.orElseThrow(IllegalArgumentException::new);
        scipaperRepository.save(scipaperUpdate);

        

        return scipaperUpdate;
    }
    
    
    @Override
    public SciPaper readSciPaper(java.lang.String id){
        Optional<SciPaper> opt = scipaperRepository.findById(id);
        return opt.orElseThrow(IllegalArgumentException::new);
    }
    
    
    @Override
    public void deleteSciPaper(java.lang.String id){
        Optional<SciPaper> opt = scipaperRepository.findById(id);
        SciPaper entity = opt.orElseThrow(IllegalArgumentException::new);
        scipaperRepository.delete(entity);

        
    }
    
    


    
    @Override
    public java.lang.Boolean publish(PublishPaperInfo publishPaperInfo){
        /*
            TODO: Implement this function!!!
        */
        // Uncomment to publish the message
        com.silvera.SciPaperService.messages.papermsggroup.PublishPaper msg = new com.silvera.SciPaperService.messages.papermsggroup.PublishPaper();
        // Here set values to the message attributes:
        // ------------------------------------------

        msg.setId(publishPaperInfo.getId());
        Optional<SciPaper> opt = scipaperRepository.findById(publishPaperInfo.getId());
        SciPaper entity = opt.orElseThrow(IllegalArgumentException::new);
        msg.setTitle(entity.getTitle());
        msg.setAuthor(entity.getAuthor());
        // ------------------------------------------
        papermsggroupPublishPaperKafkaTemplate.send("PUBLISH_PAPPER", msg);
        return true;
    }
    

    

}